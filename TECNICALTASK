Техническое задание

	Тема курсовой работы: gameLife – программа, в которой реализована математическая модель развития и выживания популяции на примере бактерий, используя алгоритм, придуманный английским математиком Джоном Конвеем в 1970 году.
	Цель работы: разработать программную реализацию математической модели развития и выживания популяции бактерий, которая получает на вход первое поколение колонии.
	Функциональность проекта: Программа получает на вход расположение бактерий в первом поколении колонии и пошагово показывает каждое следующее поколение до момента, когда колония не примет статичной или цикличной фазы развития.
	Интерфейс приложения: программа, содержащая три окна: основное с кнопками «старт»/«стоп», +/- (изменение скорости), «об игре» и «фигуры»; с правилами игры «Жизнь»; с выбором классический конфигураций. Окна реализованы с помощью графической библиотеки SFML. Программа написана на языке С++ и реализована под работу ОП Windows 10.
Задачи:
	Создать графический оконный интерфейс, который позволит пользователю: 
1.	управлять начальным расположением популяции бактерий;
2.	запускать и останавливать развитие популяции;
3.	регулировать скорость смены поколений;
4.	очищать среду от бактерий;
5.	предлагать пользователю набор стандартных конфигураций колоний из базы данных;
6.	вывести окно с информацией о программе;
7.	оставить пользователю возможность подселять новые бактерии в процессе игры.
	Для этого необходимо разработать функции:
/**
 *\param w окно вывода
 *\param texture текстура воды
 *\param matrix матрица водоёма
 *\details Отрисовка водоёма после каждого шага
*/
void waterDraw(RenderWindow& w, Texture &texture, point **matrix)


/**
 *\param matrix матрица водоёма
 *\details Вся матрица заполняется нулями, бактерий нет, водоём пуст.
*/
void fGeneration(point **matrix)

/**
 *\param nb массив для результата
 *\param x координата клетки (столбец в матрице)
 *\param y координата клетки (строка в матрице)
 *\details Поиск живых и мёртвых соседей вокруг бактерии. 
 * У клетки восемь соседей. В массив nb по очереди записываются в первую строку - живые бактерии(1), 
 * во вторую - мёртвые(0).
*/
void neighborPoint(int nb[][2], int x, int y)


/**
 *\param matrix матрица водоёма
 *\param x координата клетки (столбец в матрице)
 *\param y координата клетки (строка в матрице)
 *\return num количество живых соседей клетки(1)
 *\details Подсчёт количества живых соседей вокруг бактерии
*/
unsigned int neighborLive(point **matrix, int x, int y)


/**
 *\param m  матрица point
 *\param m1 матрица point
 *\details Обмен значения матриц между собой без копирования, используя указатели.
*/
void swapM(point** &m, point** &m1)

/**
 *\param matrix  матрица текущего состояния водоёма
 *\param matrix1 матрица водоёма во время следущего цикла жизни
 *\return isOpt  флаг остановки цикла жизни
 *\details Генерирование следущего поколения обитателей водоёма, с учётом смерти старых и 
 * рождения новых бактерий.
*/
bool nextGeneration(point** matrix, point** matrix1)


/**
 *\details Вывод окна с информацией об игре и её правилами. 
*/
void help()

/**
 *\param matrix матрица водоёма
 *\details Очищаем водоём от бактерий
*/
void clear(point** matrix)


/**
 *\param matrix матрица водоёма
 *\param button номер кнопки стандартной конфигурации колонии
 *\details Очищает водоём от всех старых клеток. Заселяет в водоём устойчивую колонию бактерий
*/
void button(point** matrix, int button)

/**
 *\param matrix матрица водоёма
 *\details Выводит окна для выбора стандартной конфигурации колонии
*/
void figures(point** matrix)

/**
 *\details Основная функция программы. 
 *Осуществляется создание и вывод основного окна. 
 *Управляет и согласовывает работу других частей программы.
*/
int main()


Реализовывать всю работу будет Тимофеева Алиса группы ИВ-123.
